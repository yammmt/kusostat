name: Rust

on: [push, pull_request]

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install postgres (Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        choco install postgresql13 --force --params '/Password:root'
        echo "C:\Program Files\PostgreSQL\13\bin" >> $GITHUB_PATH
        echo "C:\Program Files\PostgreSQL\13\lib" >> $GITHUB_PATH
        echo "PQ_LIB_DIR=C:\Program Files\PostgreSQL\13\lib" >> $GITHUB_ENV
        echo "DATABASE_URL=postgres://postgres:root@localhost/kusostat" >> $GITHUB_ENV
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  clippy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/clippy-check@v1
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  rustfmt:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run rustfmt
      run: cargo fmt -- --check
